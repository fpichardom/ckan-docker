volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:
  vscode_server:
  caddy_data:
  caddy_config:

networks:
  ckan-net:
    name: ckan-net

services:

  ckan:
    depends_on:
      - db
      - solr
      - redis
    networks:
      - ckan-net
    build:
      context: ckan/
      dockerfile: Dockerfile.kb-dev
      args:
        - TZ=${TZ}
    env_file:
      - .env

    expose:
      - "5000"
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./src:/srv/app/src_extensions
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
      - vscode_server:/root/.vscode-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
      interval: 60s
      timeout: 10s
      retries: 3

  datapusher:
    networks:
      - ckan-net
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
      interval: 60s
      timeout: 10s
      retries: 3

  db:
    networks:
      - ckan-net
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    networks:
      - ckan-net
    # build:
    #   context: solr/
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
      - ./solr/schema.xml:/var/solr/data/ckan/conf/managed-schema
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    networks:
      - ckan-net
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    networks:
      - ckan-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/caddy_config
    depends_on:
      - ckan
    healthcheck:
      test: ["CMD", "caddy", "version"]
      interval: 60s
      timeout: 10s
      retries: 3
